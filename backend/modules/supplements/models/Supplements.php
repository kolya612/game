<?php

namespace backend\modules\supplements\models;

use backend\modules\supcategories\models\Supcategories;
use backend\modules\supplements\models\SupplementsSupcategories;
use wbp\cart\ItemTrait;
use Yii;
use common\models\WbpActiveRecord;
use yii\base\BaseObject;
use yz\shoppingcart\CartPositionInterface;

class Supplements  extends WbpActiveRecord implements CartPositionInterface
{
    use ItemTrait;

    public static $imageTypes = ['supplement_main','supplement_gallery'];
    const TYPE = 'supplement';
    public $shippable = true;

    const ACTION = '/admin/supplements';
    const TITLE = 'Supplements';

    protected $linkParams=[
        'supcategories_ids'=>[
            'class'=>'\backend\modules\supplements\models\SupplementsSupcategories',
            'param_id'=>'supcategory_id',
            'model_id'=>'supplement_id'
        ]
    ];

    public $supcategories_ids;

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return '{{%supplements}}';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['title'], 'string','on' => [self::ADMIN_ADD_SCENARIO, self::ADMIN_EDIT_SCENARIO]],
            [['short_text','seo_title','seo_description','seo_keywords'], 'string', 'max' => 250],
            [['text','benefits','ingredients','nutrition_facts'], 'string'],
            [['price','sale_price'], 'double'],
            [['external_id','percent','viewed','goal','gender'], 'integer'],
            [['status'], 'integer', 'max' => 6],
            [['supcategoriesIds'],'safe']
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => 'Title',
        ];
    }

    public function getSupcategories()
    {
        return $this->hasMany(Supcategories::className(), ['id' => 'supcategory_id'])
            ->viaTable(SupplementsSupcategories::tableName(), ['supplement_id' => 'id']);
    }

    public function getSupcategoriesIds()
    {
        if($this->supcategories_ids) return $this->supcategories_ids;
        $result=[];
        $supcats = $this->getSupcategories()->all();
        foreach ($supcats as $supcat){
            $result[]=$supcat->id;
        }
        $this->supcategories_ids=$result;
        return $this->supcategories_ids;
    }

    public function setSupcategoriesIds($value)
    {
        $this->supcategories_ids=$value;
    }

    public function getSupplementsSupcategories()
    {
        return $this->hasMany(SupplementsSupcategories::className(), ['supplement_id' => 'id']);
    }

    public function afterSave($insert, $changedAttributes)
    {
        SupplementsSupcategories::deleteAll(['supplement_id' => $this->id]);

        if (!empty($this->supcategories_ids)) {
            foreach ($this->supcategories_ids as $supcategory_id) {
                $newModel = NEW SupplementsSupcategories();
                $newModel->supplement_id = $this->id;
                $newModel->supcategory_id = $supcategory_id;
                $newModel->save();
            }
        }

        return parent::afterSave($insert, $changedAttributes);
    }

    public function afterDelete()
    {
        SupplementsSupcategories::deleteAll(['supplement_id' => $this->id]);

        parent::afterDelete(); // TODO: Change the autogenerated stub
    }
}