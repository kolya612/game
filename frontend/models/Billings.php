<?php
namespace frontend\models;

use common\models\WbpActiveRecord;
use wbp\dumper\Dumper;
use Yii;
use yii\base\Model;


class Billings extends WbpActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public $expiration_date;

    public static function tableName()
    {
        return '{{%billings}}';
    }

    public function rules()
    {
        return [
            [['member_id'], 'integer'],
            [['first_name','last_name','card_number'], 'string', 'length' => [3, 50]],
            [['address'], 'string', 'max' => 250],
            [['address1'], 'string', 'max' => 250],
            [['expiration_date'], 'string', 'min'=>5, 'max'=>5],
            [['expiration_month'], 'integer', 'min'=>1, 'max'=>12],
            [['expiration_year'], 'integer','min'=>date("y")],
            [['country','state'], 'string', 'length' => [2, 50]],
            [['address','first_name','last_name','card_number','city','zip','expiration_date'], 'required'],
        ];
    }

    public static function getBillings()
    {
        return self::find()->where(['member_id'=>Yii::$app->user->id])->all();
    }

    public static function getBillingsMass()
    {
        $result = [];
        $billings = self::getBillings();
        foreach ($billings as $billing) {
            $result[$billing->id] = substr_replace($billing->card_number, '************', 0, 12);
        }

        return $result;
    }

    public function beforeSave($insert)
    {
        $this->member_id = Yii::$app->user->id;

        $date = explode('/', $this->expiration_date);
        $this->expiration_month = $date[0];
        $this->expiration_year = $date[1];

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
}